<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Nth' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='2' min='0' />
      </column>
    </datasource>
    <datasource inline='true' name='LIFE_EXPECTANCY (C##CS329E_AGC846)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_AGC846' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_agc846'>
        <relation name='LIFE_EXPECTANCY' table='[C##CS329E_AGC846].[LIFE_EXPECTANCY]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>INDICATOR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDICATOR]</local-name>
            <parent-name>[LIFE_EXPECTANCY]</parent-name>
            <remote-alias>INDICATOR</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>47</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[LIFE_EXPECTANCY]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_REGION]</local-name>
            <parent-name>[LIFE_EXPECTANCY]</parent-name>
            <remote-alias>WHO_REGION</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>21</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORLD_BANK_INCOME_GROUP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WORLD_BANK_INCOME_GROUP]</local-name>
            <parent-name>[LIFE_EXPECTANCY]</parent-name>
            <remote-alias>WORLD_BANK_INCOME_GROUP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>19</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[LIFE_EXPECTANCY]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>52</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SEX]</local-name>
            <parent-name>[LIFE_EXPECTANCY]</parent-name>
            <remote-alias>SEX</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LIFE_EXPECTANCY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LIFE_EXPECTANCY]</local-name>
            <parent-name>[LIFE_EXPECTANCY]</parent-name>
            <remote-alias>LIFE_EXPECTANCY</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Maximum' datatype='real' name='[Calculation_3590411001807950]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(AVG([LIFE_EXPECTANCY]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Nth' datatype='real' name='[Calculation_3600411010005934]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOOKUP(ZN(AVG([LIFE_EXPECTANCY])),FIRST() + [Parameters].[Parameter 1])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_9800411005143639]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(AVG([LIFE_EXPECTANCY]))-AVG([LIFE_EXPECTANCY])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Indicator' datatype='string' name='[INDICATOR]' role='dimension' type='nominal'>
      </column>
      <column caption='Life Expectancy' datatype='integer' name='[LIFE_EXPECTANCY]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Who Region' datatype='string' name='[WHO_REGION]' role='dimension' type='nominal'>
      </column>
      <column caption='World Bank Income Group' datatype='string' name='[WORLD_BANK_INCOME_GROUP]' role='dimension' type='nominal'>
      </column>
      <column caption='Year' datatype='string' name='[YEAR]' role='dimension' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Nth' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <range max='2' min='0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='cume_dist'>
      <table>
        <view>
          <datasources>
            <datasource name='LIFE_EXPECTANCY (C##CS329E_AGC846)' />
          </datasources>
          <datasource-dependencies datasource='LIFE_EXPECTANCY (C##CS329E_AGC846)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Indicator' datatype='string' name='[INDICATOR]' role='dimension' type='nominal'>
            </column>
            <column caption='Life Expectancy' datatype='integer' name='[LIFE_EXPECTANCY]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[SEX]' role='dimension' type='nominal'>
            </column>
            <column caption='Who Region' datatype='string' name='[WHO_REGION]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='string' name='[YEAR]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[INDICATOR]' derivation='None' name='[none:INDICATOR:nk]' pivot='key' type='nominal' />
            <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
            <column-instance column='[WHO_REGION]' derivation='None' name='[none:WHO_REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:nk]' pivot='key' type='nominal' />
            <column-instance column='[LIFE_EXPECTANCY]' derivation='Avg' name='[pcrk:avg:LIFE_EXPECTANCY:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]'>
            <groupfilter function='member' level='[none:INDICATOR:nk]' member='&quot;Life expectancy at birth (years)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]'>
            <groupfilter function='member' level='[none:SEX:nk]' member='&quot;Both sexes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:WHO_REGION:nk]' direction='ASC' />
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk]'>
            <groupfilter function='member' level='[none:YEAR:nk]' member='&quot;2012.0&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]</column>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]</column>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[pcrk:avg:LIFE_EXPECTANCY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:WHO_REGION:nk] / [LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='max/difference'>
      <table>
        <view>
          <datasources>
            <datasource name='LIFE_EXPECTANCY (C##CS329E_AGC846)' />
          </datasources>
          <datasource-dependencies datasource='LIFE_EXPECTANCY (C##CS329E_AGC846)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Maximum' datatype='real' name='[Calculation_3590411001807950]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(AVG([LIFE_EXPECTANCY]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_9800411005143639]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(AVG([LIFE_EXPECTANCY]))-AVG([LIFE_EXPECTANCY])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Indicator' datatype='string' name='[INDICATOR]' role='dimension' type='nominal'>
            </column>
            <column caption='Life Expectancy' datatype='integer' name='[LIFE_EXPECTANCY]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[SEX]' role='dimension' type='nominal'>
            </column>
            <column caption='World Bank Income Group' datatype='string' name='[WORLD_BANK_INCOME_GROUP]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='string' name='[YEAR]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[INDICATOR]' derivation='None' name='[none:INDICATOR:nk]' pivot='key' type='nominal' />
            <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORLD_BANK_INCOME_GROUP]' derivation='None' name='[none:WORLD_BANK_INCOME_GROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:nk]' pivot='key' type='nominal' />
            <column-instance column='[LIFE_EXPECTANCY]' derivation='Sum' name='[sum:LIFE_EXPECTANCY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3590411001807950]' derivation='User' name='[usr:Calculation_3590411001807950:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
            <column-instance column='[Calculation_9800411005143639]' derivation='User' name='[usr:Calculation_9800411005143639:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_9800411005143639]' derivation='User' name='[usr:Calculation_9800411005143639:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[LIFE_EXPECTANCY (C\#\#CS329E_AGC846)].[sum:LIFE_EXPECTANCY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[LIFE_EXPECTANCY (C\#\#CS329E_AGC846)].[usr:Calculation_3590411001807950:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[LIFE_EXPECTANCY (C\#\#CS329E_AGC846)].[usr:Calculation_9800411005143639:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[LIFE_EXPECTANCY (C\#\#CS329E_AGC846)].[sum:LIFE_EXPECTANCY:qk]&quot;</bucket>
              <bucket>&quot;[LIFE_EXPECTANCY (C\#\#CS329E_AGC846)].[usr:Calculation_3590411001807950:qk:3]&quot;</bucket>
              <bucket>&quot;[LIFE_EXPECTANCY (C\#\#CS329E_AGC846)].[usr:Calculation_9800411005143639:qk:2]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk]' direction='ASC' />
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]'>
            <groupfilter function='member' level='[none:INDICATOR:nk]' member='&quot;Life expectancy at birth (years)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]'>
            <groupfilter function='member' level='[none:SEX:nk]' member='&quot;Both sexes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:WORLD_BANK_INCOME_GROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High-income&quot;</bucket>
              <bucket>&quot;Upper-middle-income&quot;</bucket>
              <bucket>&quot;Lower-middle-income&quot;</bucket>
              <bucket>&quot;Low-income&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk]'>
            <groupfilter function='member' level='[none:YEAR:nk]' member='&quot;2012.0&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]</column>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]</column>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk]</column>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[:Measure Names]' value='333' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[Multiple Values]' />
              <lod column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:WORLD_BANK_INCOME_GROUP:nk] / [LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk])</rows>
        <cols>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='nth'>
      <table>
        <view>
          <datasources>
            <datasource name='LIFE_EXPECTANCY (C##CS329E_AGC846)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='LIFE_EXPECTANCY (C##CS329E_AGC846)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Nth' datatype='real' name='[Calculation_3600411010005934]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOOKUP(ZN(AVG([LIFE_EXPECTANCY])),FIRST() + [Parameters].[Parameter 1])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Indicator' datatype='string' name='[INDICATOR]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[SEX]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='string' name='[YEAR]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[INDICATOR]' derivation='None' name='[none:INDICATOR:nk]' pivot='key' type='nominal' />
            <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3600411010005934]' derivation='User' name='[usr:Calculation_3600411010005934:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[YEAR]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <sort class='alphabetic' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk]' direction='ASC' />
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]'>
            <groupfilter function='member' level='[none:INDICATOR:nk]' member='&quot;Life expectancy at birth (years)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]'>
            <groupfilter function='member' level='[none:SEX:nk]' member='&quot;Both sexes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]</column>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[usr:Calculation_3600411010005934:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk] / [LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='rank'>
      <table>
        <view>
          <datasources>
            <datasource name='LIFE_EXPECTANCY (C##CS329E_AGC846)' />
          </datasources>
          <datasource-dependencies datasource='LIFE_EXPECTANCY (C##CS329E_AGC846)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Indicator' datatype='string' name='[INDICATOR]' role='dimension' type='nominal'>
            </column>
            <column caption='Life Expectancy' datatype='integer' name='[LIFE_EXPECTANCY]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[SEX]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='string' name='[YEAR]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[INDICATOR]' derivation='None' name='[none:INDICATOR:nk]' pivot='key' type='nominal' />
            <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:nk]' pivot='key' type='nominal' />
            <column-instance column='[LIFE_EXPECTANCY]' derivation='Sum' name='[rank:sum:LIFE_EXPECTANCY:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[YEAR]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
          </datasource-dependencies>
          <sort class='alphabetic' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk]' direction='ASC' />
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]'>
            <groupfilter function='member' level='[none:INDICATOR:nk]' member='&quot;Life expectancy at birth (years)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]'>
            <groupfilter function='member' level='[none:SEX:nk]' member='&quot;Both sexes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]</column>
            <column>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='275' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[LIFE_EXPECTANCY (C##CS329E_AGC846)].[rank:sum:LIFE_EXPECTANCY:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk] / [LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk])</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='max/difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[:Measure Names]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:WORLD_BANK_INCOME_GROUP:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='nth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[:Measure Names]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='cume_dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:COUNTRY:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:INDICATOR:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:SEX:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:WHO_REGION:nk]</field>
          <field>[LIFE_EXPECTANCY (C##CS329E_AGC846)].[none:YEAR:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='rank' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='max/difference' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='nth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cume_dist' width='192'>
      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
      /wCwPQKDdVd5sAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
